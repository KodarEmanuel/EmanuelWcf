//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ProxyHttpCustomer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/Data.Domains")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FName {
            get {
                return this.FNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FNameField, value) != true)) {
                    this.FNameField = value;
                    this.RaisePropertyChanged("FName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LName {
            get {
                return this.LNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LNameField, value) != true)) {
                    this.LNameField = value;
                    this.RaisePropertyChanged("LName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Booking", Namespace="http://schemas.datacontract.org/2004/07/Data.Domains")]
    [System.SerializableAttribute()]
    public partial class Booking : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CarIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustumerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReturnedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CarId {
            get {
                return this.CarIdField;
            }
            set {
                if ((this.CarIdField.Equals(value) != true)) {
                    this.CarIdField = value;
                    this.RaisePropertyChanged("CarId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustumerId {
            get {
                return this.CustumerIdField;
            }
            set {
                if ((this.CustumerIdField.Equals(value) != true)) {
                    this.CustumerIdField = value;
                    this.RaisePropertyChanged("CustumerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Returned {
            get {
                return this.ReturnedField;
            }
            set {
                if ((this.ReturnedField.Equals(value) != true)) {
                    this.ReturnedField = value;
                    this.RaisePropertyChanged("Returned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProxyHttpCustomer.IServiceCustomer")]
    public interface IServiceCustomer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGenericOf_Customer/Create", ReplyAction="http://tempuri.org/IServiceGenericOf_Customer/CreateResponse")]
        void Create(Client.ProxyHttpCustomer.Customer entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGenericOf_Customer/Create", ReplyAction="http://tempuri.org/IServiceGenericOf_Customer/CreateResponse")]
        System.Threading.Tasks.Task CreateAsync(Client.ProxyHttpCustomer.Customer entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGenericOf_Customer/ReadAll", ReplyAction="http://tempuri.org/IServiceGenericOf_Customer/ReadAllResponse")]
        Client.ProxyHttpCustomer.Customer[] ReadAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGenericOf_Customer/ReadAll", ReplyAction="http://tempuri.org/IServiceGenericOf_Customer/ReadAllResponse")]
        System.Threading.Tasks.Task<Client.ProxyHttpCustomer.Customer[]> ReadAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGenericOf_Customer/ReadById", ReplyAction="http://tempuri.org/IServiceGenericOf_Customer/ReadByIdResponse")]
        Client.ProxyHttpCustomer.Customer ReadById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGenericOf_Customer/ReadById", ReplyAction="http://tempuri.org/IServiceGenericOf_Customer/ReadByIdResponse")]
        System.Threading.Tasks.Task<Client.ProxyHttpCustomer.Customer> ReadByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGenericOf_Customer/Update", ReplyAction="http://tempuri.org/IServiceGenericOf_Customer/UpdateResponse")]
        void Update(Client.ProxyHttpCustomer.Customer entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGenericOf_Customer/Update", ReplyAction="http://tempuri.org/IServiceGenericOf_Customer/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(Client.ProxyHttpCustomer.Customer entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGenericOf_Customer/Delete", ReplyAction="http://tempuri.org/IServiceGenericOf_Customer/DeleteResponse")]
        void Delete(Client.ProxyHttpCustomer.Customer entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGenericOf_Customer/Delete", ReplyAction="http://tempuri.org/IServiceGenericOf_Customer/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(Client.ProxyHttpCustomer.Customer entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCustomer/GetCurrentBooking", ReplyAction="http://tempuri.org/IServiceCustomer/GetCurrentBookingResponse")]
        Client.ProxyHttpCustomer.Booking GetCurrentBooking(Client.ProxyHttpCustomer.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCustomer/GetCurrentBooking", ReplyAction="http://tempuri.org/IServiceCustomer/GetCurrentBookingResponse")]
        System.Threading.Tasks.Task<Client.ProxyHttpCustomer.Booking> GetCurrentBookingAsync(Client.ProxyHttpCustomer.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCustomer/GetAllPastBookings", ReplyAction="http://tempuri.org/IServiceCustomer/GetAllPastBookingsResponse")]
        Client.ProxyHttpCustomer.Booking[] GetAllPastBookings(Client.ProxyHttpCustomer.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCustomer/GetAllPastBookings", ReplyAction="http://tempuri.org/IServiceCustomer/GetAllPastBookingsResponse")]
        System.Threading.Tasks.Task<Client.ProxyHttpCustomer.Booking[]> GetAllPastBookingsAsync(Client.ProxyHttpCustomer.Customer customer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceCustomerChannel : Client.ProxyHttpCustomer.IServiceCustomer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceCustomerClient : System.ServiceModel.ClientBase<Client.ProxyHttpCustomer.IServiceCustomer>, Client.ProxyHttpCustomer.IServiceCustomer {
        
        public ServiceCustomerClient() {
        }
        
        public ServiceCustomerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceCustomerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCustomerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCustomerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Create(Client.ProxyHttpCustomer.Customer entity) {
            base.Channel.Create(entity);
        }
        
        public System.Threading.Tasks.Task CreateAsync(Client.ProxyHttpCustomer.Customer entity) {
            return base.Channel.CreateAsync(entity);
        }
        
        public Client.ProxyHttpCustomer.Customer[] ReadAll() {
            return base.Channel.ReadAll();
        }
        
        public System.Threading.Tasks.Task<Client.ProxyHttpCustomer.Customer[]> ReadAllAsync() {
            return base.Channel.ReadAllAsync();
        }
        
        public Client.ProxyHttpCustomer.Customer ReadById(int id) {
            return base.Channel.ReadById(id);
        }
        
        public System.Threading.Tasks.Task<Client.ProxyHttpCustomer.Customer> ReadByIdAsync(int id) {
            return base.Channel.ReadByIdAsync(id);
        }
        
        public void Update(Client.ProxyHttpCustomer.Customer entity) {
            base.Channel.Update(entity);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(Client.ProxyHttpCustomer.Customer entity) {
            return base.Channel.UpdateAsync(entity);
        }
        
        public void Delete(Client.ProxyHttpCustomer.Customer entity) {
            base.Channel.Delete(entity);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(Client.ProxyHttpCustomer.Customer entity) {
            return base.Channel.DeleteAsync(entity);
        }
        
        public Client.ProxyHttpCustomer.Booking GetCurrentBooking(Client.ProxyHttpCustomer.Customer customer) {
            return base.Channel.GetCurrentBooking(customer);
        }
        
        public System.Threading.Tasks.Task<Client.ProxyHttpCustomer.Booking> GetCurrentBookingAsync(Client.ProxyHttpCustomer.Customer customer) {
            return base.Channel.GetCurrentBookingAsync(customer);
        }
        
        public Client.ProxyHttpCustomer.Booking[] GetAllPastBookings(Client.ProxyHttpCustomer.Customer customer) {
            return base.Channel.GetAllPastBookings(customer);
        }
        
        public System.Threading.Tasks.Task<Client.ProxyHttpCustomer.Booking[]> GetAllPastBookingsAsync(Client.ProxyHttpCustomer.Customer customer) {
            return base.Channel.GetAllPastBookingsAsync(customer);
        }
    }
}
